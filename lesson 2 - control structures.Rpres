Lesson 2 - Flow Control & loops
========================================================
author: Dai ZJ
transition: rotate
width: 1650
height: 1050
```{r setup, include=FALSE}
opts_chunk$set(cache=TRUE)
```

Conditional branching - if
========================================================
The if statement is perhaps the most ubiquituous programming contruct

```{r}
something.is.true <- TRUE
something.else.is.true <- TRUE

if (something.is.true) {
  #do this
} else if(something.else.is.true) {
  #do this other thing
} else {
  #do this is nothing else is true
}
```

ifelse
========================================================
By assigning a value based on the true or false

```{r}
a <- ifelse(TRUE, 1, 2)
a

b <- ifelse(a == 0, 1, 2)
b
# ifelse works on vectors
v <- 1:5
v1 <- ifelse(v < 3, v, v * 2)
v1
```

for loop
========================================================
- If possible in R you should avoid using for loops
- The R programming style prefers vectorization
  - As much as possible AVOID code that deals with each element individual
```{r}
for(i in 1:3) {
  print(i)
}
```

while loop
========================================================
```{r}
i <- 0
while(i <= 2) {
  i <- i + 1
  print(i)
}
```

Exercises
========================================================
Find all prime numbers below 1000